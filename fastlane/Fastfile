# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:mac)
  desc "Release new version"
    lane :release do |options|
      type = options[:type]

      if type != "release" && type != "alpha"
        UI.user_error!("Wrong release type use: alpha or release")
      end

      build
      
      build_number = get_build_number(xcodeproj: "Conferences.xcodeproj")
      version = get_version_number(xcodeproj: "Conferences.xcodeproj")
      
      if type == "release"
        tag = version
      else 
        tag = version + "-" + type + build_number
      end
      
      filename = "Conferences_v" + tag + ".zip"

      #clean Releases/
      sh("mv ../Releases/Conferences.app.dSYM.zip ../../")
      sh("rm ../Releases/Conferences_latest.zip")
      sh("cd ../Releases && zip -r" + " " + filename + " " + "Conferences.app")
      sh("rm -r ../Releases/Conferences.app")
      sh("./../Pods/Sparkle/bin/generate_appcast ../Releases/")
      sh("cd ../Releases && sed 's#https://conferences.digital/updates/#https://github.com/zagahr/Conferences.digital/releases/download/" + tag + "/#' appcast.xml > appcast.xml.tmp && mv appcast.xml.tmp appcast.xml")
      
      sh("rm -r ../../updates/*")
      sh("cp ../Releases/" + filename + " ../../updates")
      sh("cp ../Releases/appcast.xml ../../updates")
      sh("mv ../Releases/" + filename + " ../Releases/Conferences_latest.zip")
      
      puts "All done"
      puts "Tag: " + tag
    end

    desc "Deploy new version to Sparkle"
    lane :deploy do
      sh("eval $(docker-machine env conference-server)")
      sh("mv ../../updates/*.zip ../../updates/Conferences.zip")
      sh("docker cp ../../updates conferences-server_server_1:/app/Public/")
    end

    desc "Build new release version"
    lane :build  do
      increment_build_number
      build_app(scheme: "Conferences-Server",
            configuration: "Release",
            workspace: "Conferences.xcworkspace",
            output_directory: "Releases",
            toolchain: "org.swift.5020190129a")
    end
